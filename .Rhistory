select(Estimador, everything())
confint(fit_depressao_intera, level=0.95) %>%
as_tibble() %>%
mutate(Estimador = row.names(confint(fit_depressao_intera, level=0.95))) %>%
select(Estimador, everything())
confint(fit_depressao_intera, level=0.95) %>%
as_tibble() %>%
mutate(Estimador = row.names(confint(fit_depressao_intera, level=0.95))) %>%
select(Estimador, everything()) %>%
knitr::kable(
format = "latex",
align = c("lcc"),
booktabs = TRUE,
longtable = TRUE,
linesep = "",
escape = FALSE,
digits = 3,
col.names = c("Estimador","LI (2.5%)", "LS (97.5%)"),
caption = "Intervalos de confiança para estimadores dos coeficientes de regressão") %>%
kableExtra::kable_styling(
position = "center",
latex_options = c("striped", "repeat_header"),
stripe_color = "gray!15")
row.names(confint(fit_depressao_intera, level=0.95))
tabela <- confint(fit_depressao_intera, level=0.95) %>%
as_tibble() %>%
mutate(Estimador = nomes) %>%
select(Estimador, everything())
tabela
tabela <- confint(fit_depressao_intera, level=0.95) %>%
as_tibble() %>%
mutate(Estimador = nomes) %>%
select(Estimador, everything())
nomes <- row.names(confint(fit_depressao_intera, level=0.95))
tabela <- confint(fit_depressao_intera, level=0.95) %>%
as_tibble() %>%
mutate(Estimador = nomes) %>%
select(Estimador, everything())
tabela
influence.measures(fit_depressao_intera)
influence.measures(fit_depressao_intera)
plot(dados$idade, dados$eficacia)
## Perform the normal Shapiro-Wilk test for the residuals
shapiro.test(residuals(fit_depressao_intera))
## Perform breush-pagan test for hetereocedascity
bptest(fit_depressao_intera)
## Perform Durbin-Watson test for Independence
durbinWatsonTest(fit_depressao_intera)
## Perform the normal Shapiro-Wilk test for the residuals
shapiro.test(residuals(fit_depressao_intera)) %>% tidy()
## Perform breush-pagan test for hetereocedascity
bptest(fit_depressao_intera) %>% tidy()
## Perform Durbin-Watson test for Independence
durbinWatsonTest(fit_depressao_intera) %>% tidy()
shapiro.test(residuals(fit_depressao_intera)) %>% tidy()
bptest(fit_depressao_intera) %>% tidy()
durbinWatsonTest(fit_depressao_intera) %>% tidy()
durbinWatsonTest(fit_depressao_intera)
## Perform the normal Shapiro-Wilk test for the residuals
shapiro.test(residuals(fit_depressao_intera)) %>% tidy()
## Perform breush-pagan test for hetereocedascity
bptest(fit_depressao_intera) %>% tidy()
## Perform Durbin-Watson test for Independence
durbinWatsonTest(fit_depressao_intera) %>% tidy()
## Perform breush-pagan test for hetereocedascity
(bptest(fit_depressao_intera) %>% tidy())[, c(1, 2, 4)]
## Perform Durbin-Watson test for Independence
(durbinWatsonTest(fit_depressao_intera) %>% tidy())[,c(1, 2, 4)]
## Perform the normal Shapiro-Wilk test for the residuals
shapiro.test(residuals(fit_depressao_intera)) %>% tidy()
## Perform breush-pagan test for hetereocedascity
(bptest(fit_depressao_intera) %>% tidy())[, c(1, 2, 4)]
## Perform Durbin-Watson test for Independence
(durbinWatsonTest(fit_depressao_intera) %>% tidy())[,c(1, 2, 4)]
## Perform breush-pagan test for hetereocedascity
(bptest(fit_depressao_intera) %>% tidy())[, c(1, 2, 4)]
## Perform the normal Shapiro-Wilk test for the residuals
shapiro.test(residuals(fit_depressao_intera)) %>% tidy()
?shapiro.test
tibble(
## Perform the normal Shapiro-Wilk test for the residuals
shapiro.test(residuals(fit_depressao_intera)) %>% tidy(),
## Perform breush-pagan test for hetereocedascity
(bptest(fit_depressao_intera) %>% tidy())[, c(1, 2, 4)],
## Perform Durbin-Watson test for Independence
(durbinWatsonTest(fit_depressao_intera) %>% tidy())[,c(1, 2, 4)]
)
bind_rows(
## Perform the normal Shapiro-Wilk test for the residuals
shapiro.test(residuals(fit_depressao_intera)) %>% tidy(),
## Perform breush-pagan test for hetereocedascity
(bptest(fit_depressao_intera) %>% tidy())[, c(1, 2, 4)],
## Perform Durbin-Watson test for Independence
(durbinWatsonTest(fit_depressao_intera) %>% tidy())[,c(1, 2, 4)]
)
influence.measures(MultipleReg2) %>% class()
influence.measures(fit_depressao_intera) %>% class()
influence.measures(fit_depressao_intera) %>% as.data.frame()
influence.measures(fit_depressao_intera) %>% tidy()
rstudent(MultipleReg2)
rstandard(fit_depressao_intera) %>% plot()
rstandard(fit_depressao_intera)
rstudent(fit_depressao_intera) %>% plot()
rstudent(fit_depressao_intera)
influence.measures(fit_depressao_intera)
influence.measures(fit_depressao_intera)
plot(fit_depressao_intera)
plot(fit_depressao_intera)
rstudent(fit_depressao_intera) %>% plot()
rstudent(fit_depressao_intera) %>% plot()
dados
plot(1:36, dados$eficacia)
plot(1:36, rstudent(fit_depressao_intera))
plot(dados$eficacia, rstudent(fit_depressao_intera))
rstudent(fit_depressao_intera) %>% plot()
rstudent(fit_depressao_intera) %>% plot()
rstudent(fit_depressao_intera) %>% plot()
influence.measures(fit_depressao_intera)
?influence.measures
if(!("pacman" %in% installed.packages())){install.packages("pacman")}
pacman::p_load(tidyverse, tidymodels, kableExtra, corrplot, plotrix, lmtest, psych, car, phia, cowplot)
source("dados lista 2/envelope_function.R")
envelope_LR(fit_depressao_intera, OLS = F, main.title = "Resíduos com envelope")
source("dados lista 2/envelope_function.R")
envelope_LR(fit_depressao_intera, OLS = F, main.title = "Resíduos com envelope")
envelope_LR(fit_depressao_intera, OLS = T, main.title = "Resíduos com envelope")
envelope_LR(fit_depressao_intera, OLS = T, main.title = "Resíduos com envelope")
if(!("pacman" %in% installed.packages())){install.packages("pacman")}
pacman::p_load(tidyverse, tidymodels, kableExtra, corrplot, plotrix, lmtest, psych, car, phia, cowplot)
dados <- read.table("dados lista 2/Q02_data.txt", header=T)
head(dados)%>%
knitr::kable(
format = "latex",
align = c("c"),
booktabs = TRUE,
longtable = TRUE,
linesep = "",
escape = FALSE,
digits = 2
) %>%
kableExtra::kable_styling(
position = "center",
latex_options = c("striped", "repeat_header"),
stripe_color = "gray!15")
dados %>%
ggplot(aes(eficacia))+
geom_histogram(color = "black", fill = "gray", bins = 10)+
scale_y_continuous(limits = c(0, 9),
expand = expansion(mult = 0, add = 0))+
labs(x = "Eficácia", y = "")+
theme_bw()+
theme(axis.ticks = element_blank())
dados %>%
ggplot(aes(eficacia, fill = tratamento))+
geom_histogram(bins = 10, color = "black")+
scale_y_continuous(limits = c(0, 5),
expand = expansion(mult = 0, add = 0))+
labs(x = "Eficácia", y = "", fill = "Tratamento")+
theme_bw()+
theme(axis.ticks = element_blank())+
facet_wrap(~tratamento)
geral <- ggplot(dados, aes(x = idade, y = eficacia))+
geom_point(shape = 15, size = 2, alpha = .75)+
geom_smooth(method = "lm", se = FALSE)+
labs(y = "Eficácia", x = "Idade")+
theme_bw()+
theme(axis.ticks = element_blank())
trat <- ggplot(dados, aes(x = idade, y = eficacia, color = tratamento))+
geom_point(shape = 15, size = 2, alpha = .75)+
labs(y = "Eficácia", x = "Idade")+
theme_bw()+
theme(axis.ticks = element_blank(),
legend.position = "none")
plot_grid(geral, trat)
#da encoding à variavel tratamento
dados_dummy <- dados %>%
mutate(A = if_else(tratamento == "A", 1, 0),
B = if_else(tratamento == "B", 1, 0)) %>%
select(-tratamento)
#monta fit aditivo do modelo
fit_depressao <- lm(eficacia ~ (.), data = dados_dummy)
#tabela do modelo
fit_depressao %>%
summary() %>%
tidy() %>%
knitr::kable(
format = "latex",
align = c("lcccc"),
booktabs = TRUE,
longtable = TRUE,
linesep = "",
escape = FALSE,
digits = 3,
col.names = c("Coeficiente","Estimativa", "EP" , "Estatística t", "p-valor"),
caption = "Modelo de regressão linear para tratamentos sem interação com idade sobre eficácia"
) %>%
kableExtra::kable_styling(
position = "center",
latex_options = c("striped", "repeat_header"),
stripe_color = "gray!15")
glimpse(dados)
?select
if(!("pacman" %in% installed.packages())){install.packages("pacman")}
pacman::p_load(tidyverse, tidymodels, kableExtra, corrplot, plotrix, lmtest, psych, car, phia, cowplot, MASS, corrplot)
#Lendo e fazendo uma primeira observação das variáveis
dados_qualidade_vinho <- read.table("dados lista 2/Q01_data.txt", header=T)
head(dados_qualidade_vinho)
#Analisando as possíveis correlações entre as variáveis
#Correlação
cor <- cor(dados_qualidade_vinho)
##Visualização da correlação
corrplot::corrplot(cor, method = "color",
type = "full",
order = "hclust",
addCoef.col = "black",
tl.srt = 50,
diag = T,
number.cex = 0.7)
pairs(dados_qualidade_vinho, col= "navy", gap=0.2, pch = 19)
#Lendo e fazendo uma primeira observação das variáveis
dados_qualidade_vinho <- read.table("dados lista 2/Q01_data.txt", header=T)
head(dados_qualidade_vinho)%>%
knitr::kable(
format = "latex",
align = c("c"),
booktabs = TRUE,
longtable = TRUE,
linesep = "",
escape = FALSE,
digits = 2
) %>%
kableExtra::kable_styling(
position = "center",
latex_options = c("striped", "repeat_header"),
stripe_color = "gray!15")
# Resumo estatístico dos dados
summary(dados_qualidade_vinho[, 1:6])%>%
knitr::kable(
format = "latex",
align = c("c"),
booktabs = TRUE,
longtable = TRUE,
linesep = "",
escape = FALSE,
digits = 2
) %>%
kableExtra::kable_styling(
position = "center",
latex_options = c("striped", "repeat_header"),
stripe_color = "gray!15")
summary(dados_qualidade_vinho[, 7:11])%>%
knitr::kable(
format = "latex",
align = c("c"),
booktabs = TRUE,
longtable = TRUE,
linesep = "",
escape = FALSE,
digits = 2
) %>%
kableExtra::kable_styling(
position = "center",
latex_options = c("striped", "repeat_header"),
stripe_color = "gray!15")
#Analisando as possíveis correlações entre as variáveis
#Correlação
cor <- cor(dados_qualidade_vinho)
##Visualização da correlação
corrplot::corrplot(cor, method = "color",
type = "full",
order = "hclust",
addCoef.col = "black",
tl.srt = 50,
diag = T,
number.cex = 0.7)
pairs(dados_qualidade_vinho, col= "navy", gap=0.2, pch = 19)
# Ajustando o Modelo de Regressão Múltipla
modelo_reg_multi <- lm(y~., data=dados_qualidade_vinho)
summary(modelo_reg_multi)
# Ajustando o Modelo de Regressão Múltipla
modelo_reg_multi <- lm(y~., data=dados_qualidade_vinho)
summary(modelo_reg_multi)
summary(modelo_reg_multi) %>%
tidy() %>%
knitr::kable(
format = "latex",
align = c("lcccc"),
booktabs = TRUE,
longtable = TRUE,
linesep = "",
escape = FALSE,
digits = 3,
col.names = c("Coeficiente","Estimativa", "EP" , "Estatística t", "p-valor"),
caption = "Modelo de regressão linear para tratamentos sem interação com idade sobre eficácia"
) %>%
kableExtra::kable_styling(
position = "center",
latex_options = c("striped", "repeat_header"),
stripe_color = "gray!15")
tabela <- confint(fit_depressao_intera, level=0.95) %>%
as_tibble() %>%
mutate(Estimador = nomes) %>%
dyplr::select(Estimador, everything())
nomes <- row.names(confint(fit_depressao_intera, level=0.95))
tabela <- confint(fit_depressao_intera, level=0.95) %>%
as_tibble() %>%
mutate(Estimador = nomes) %>%
dyplr::select(Estimador, everything())
tabela <- confint(fit_depressao_intera, level=0.95) %>%
as_tibble() %>%
mutate(Estimador = nomes) %>%
dplyr::select(Estimador, everything())
bind_rows(
## Perform the normal Shapiro-Wilk test for the residuals
shapiro.test(residuals(fit_depressao_intera)) %>% tidy(),
## Perform breush-pagan test for hetereocedascity
(bptest(fit_depressao_intera) %>% tidy())[, c(1, 2, 4)],
## Perform Durbin-Watson test for Independence
(durbinWatsonTest(fit_depressao_intera) %>% tidy())[,c(1, 2, 4)]
) %>%
dplyr::select(method, everything()) %>%
knitr::kable(
format = "latex",
align = c("lcc"),
booktabs = TRUE,
longtable = TRUE,
linesep = "",
escape = FALSE,
digits = 3,
col.names = c("Teste","Estatística de teste","p-valor"),
caption = "Testes de hipótese para normalidade, heteroscedasticidade e independência."
) %>%
kableExtra::kable_styling(
position = "center",
latex_options = c("striped", "repeat_header"),
stripe_color = "gray!15")
## Outliers nos resíduos
summary(rstandard(modelo_reg_multi)) #não tem valores fugindo de -3 e +3, então não tem outliers
if(!("pacman" %in% installed.packages())){install.packages("pacman")}
pacman::p_load(tidyverse, tidymodels, kableExtra, corrplot, plotrix, lmtest, psych, car, phia, cowplot, MASS, corrplot)
#Lendo e fazendo uma primeira observação das variáveis
dados_qualidade_vinho <- read.table("dados lista 2/Q01_data.txt", header=T)
head(dados_qualidade_vinho)%>%
knitr::kable(
format = "latex",
align = c("c"),
booktabs = TRUE,
longtable = TRUE,
linesep = "",
escape = FALSE,
digits = 2
) %>%
kableExtra::kable_styling(
position = "center",
latex_options = c("striped", "repeat_header"),
stripe_color = "gray!15")
# Resumo estatístico dos dados
#
# summary(dados_qualidade_vinho[, 1:6])%>%
#   knitr::kable(
#     format = "latex",
#     align = c("c"),
#     booktabs = TRUE,
#     longtable = TRUE,
#     linesep = "",
#     escape = FALSE,
#     digits = 2
#     ) %>%
#   kableExtra::kable_styling(
#       position = "center",
#       latex_options = c("striped", "repeat_header"),
#       stripe_color = "gray!15")
#
#
#
# summary(dados_qualidade_vinho[, 7:11])%>%
#   knitr::kable(
#     format = "latex",
#     align = c("c"),
#     booktabs = TRUE,
#     longtable = TRUE,
#     linesep = "",
#     escape = FALSE,
#     digits = 2
#     ) %>%
#   kableExtra::kable_styling(
#       position = "center",
#       latex_options = c("striped", "repeat_header"),
#       stripe_color = "gray!15")
#Analisando as possíveis correlações entre as variáveis
#Correlação
cor <- cor(dados_qualidade_vinho)
##Visualização da correlação
corrplot::corrplot(cor, method = "color",
type = "full",
order = "hclust",
addCoef.col = "black",
tl.srt = 50,
diag = T,
number.cex = 0.7)
#Analisando as possíveis correlações entre as variáveis
pairs(dados_qualidade_vinho, col= "navy", gap=0.2, pch = 19)
modelo_reg_multi <- lm(y~., data=dados_qualidade_vinho)
summary(modelo_reg_multi) %>%
tidy()
summary(rstandard(modelo_reg_multi))
## Analisando a ausência de Multicolinearidade no modelo
pairs.panels(dados_qualidade_vinho, gap=0.2) #Multicolinearidade se r > 0.9 ou 0.8
# modelo ajustado sem x7 e x10
modelo_reg_multi2 <- lm(y~x1+x2+x3+x4+x5+x6+x8+x9, data=dados_qualidade_vinho)
summary(modelo_reg_multi2)
#multicolinearidade
vif(modelo_reg_multi2) # Multicolinearidade se VIF > 10 (severa) e > 5 (moderada)
vif(modelo_final) %>% #não há mais multicolinearidade
tidy()
vif(modelo_final) %>% #não há mais multicolinearidade
tidy()
vif(modelo_final) %>% #não há mais multicolinearidade
as_tibble()
vif(modelo_final)
# modelo ajustado sem x7 e x10
modelo_reg_multi2 <- lm(y~x1+x2+x3+x5+x6+x8+x9, data=dados_qualidade_vinho)
#multicolinearidade
vif(modelo_reg_multi2) %>% tidy()
modelo_stepwise <- stepAIC(modelo_reg_multi2, direction = "both")
##seleciona o melhor modelo como y ~ x1 + x2 + x3 + x9
modelo_final <- lm(y~ x1 + x2 + x3 + x9, data=dados_qualidade_vinho)
summary(modelo_final)
anova(modelo_final)%>%
tidy()
summary(modelo_final)%>%
tidy()
?stepAIC
modelo_final <- lm(y~ x2 + x3 + x9, data=dados_qualidade_vinho)
anova(modelo_final)%>%
tidy()
anova(modelo_final)%>%
tidy()
summary(modelo_final)%>%
tidy()
modelo_final <- lm(y~ x2 + x9, data=dados_qualidade_vinho)
summary(modelo_final)%>%
tidy() %>%
knitr::kable(
format = "latex",
align = c("lcccc"),
booktabs = TRUE,
longtable = TRUE,
linesep = "",
escape = FALSE,
digits = 3,
col.names = c("Coeficiente","Estimativa", "EP" , "Estatística t", "p-valor"),
caption = "Modelo de regressão linear com x2 e x9"
) %>%
kableExtra::kable_styling(
position = "center",
latex_options = c("striped", "repeat_header"),
stripe_color = "gray!15")
anova(modelo_final)%>%
tidy() %>%
knitr::kable(
format = "latex",
align = c("lcccc"),
booktabs = TRUE,
longtable = TRUE,
linesep = "",
escape = FALSE,
digits = 3,
col.names = c("Fonte de Var.","g.l.", "SQ" , "QM", "F", "p-valor"),
caption = "Tabela ANOVA para o modelo linear com x2 e x9"
) %>%
kableExtra::kable_styling(
position = "center",
latex_options = c("striped", "repeat_header"),
stripe_color = "gray!15")
plot(modelo_final)
plot(modelo_final)
## Outliers nos resíduos
summary(rstandard(modelo_final)) %>% tidy() #não tem valores fugindo de -3 e +3, então não tem outliers
install.packages("texlive")
if(!("pacman" %in% installed.packages())){install.packages("pacman")}
pacman::p_load(tidyverse, tidymodels, kableExtra, corrplot, plotrix, lmtest, psych, car, phia, cowplot, MASS, corrplot)
if(!("pacman" %in% installed.packages())){install.packages("pacman")}
pacman::p_load(tidyverse, tidymodels, kableExtra, corrplot, plotrix, lmtest, psych, car, phia, cowplot, MASS, corrplot)
tinytex::install_tinytex()
if(!("pacman" %in% installed.packages())){install.packages("pacman")}
pacman::p_load(tidyverse, tidymodels, kableExtra, corrplot, plotrix, lmtest, psych, car, phia, cowplot, MASS, corrplot)
tinytex::tlmgr_search('setspace.sty')
tinytex::use_tinytex()
tinytex::tlmgr_install()
tinytex::install_tinytex()
tinytex::tlmgr_install()
tinytex::tlmgr_install()
tinytex::tlmgr_install?
?tinytex::tlmgr_install
tinytex::tlmgr_search()
tinytex::tlmgr_install()
tinytex::install_tinytex()
?glmer
??glmer
if(!("pacman" %in% installed.packages())){install.packages("pacman")}
pacman::p_load(tidyverse, tidymodels, kableExtra, lme4)
# Carregue a biblioteca
library(haven)
# Substitua "seuarquivo.sav" pelo caminho do seu arquivo .sav
dados_spss <- read_sav("C:/Users/cesar/Downloads/thaieduc.sav")
# Visualize os primeiros registros do conjunto de dados
head(dados_spss)
install.packages("geobr")
asdf <- geobr::read_health_facilities()
View(asdf)
install.packages("microdatasus")
