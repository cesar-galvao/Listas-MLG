getwd()
#Lendo e fazendo uma primeira observação das variáveis
dados_qualidade_vinho <- read.table("~/UnB/9 semestre/MLG/Listas MLG/dados lista 2", header=T)
#Lendo e fazendo uma primeira observação das variáveis
dados_qualidade_vinho <- read.table("~\UnB\9 semestre\MLG\Listas MLG\dados lista 2", header=T)
#Lendo e fazendo uma primeira observação das variáveis
dados_qualidade_vinho <- read.table("~/UnB/9 semestre/MLG/Listas MLG/dados lista 2/Q01_data.txt", header=T)
head(dados_qualidade_vinho)
# Ajustando o Modelo de Regressão Múltipla
modelo_reg_multi <- lm(y~., data=dados_qualidade_vinho)
summary(modelo_reg_multi)
# modelo ajustado sem x7 e x10
modelo_reg_multi2 <- lm(y~x1+x2+x3+x4+x5+x6+x8+x9, data=dados_qualidade_vinho)
summary(modelo_reg_multi2)
# modelo ajustado sem x7 e x10
modelo_reg_multi2 <- lm(y~x1+x2+x3+x4+x5+x6+x7+x8+x9, data=dados_qualidade_vinho)
summary(modelo_reg_multi2)
vif(modelo_reg_multi2) # Multicolinearidade se VIF > 10 (severa) e > 5 (moderada)
# modelo ajustado sem x7 e x10
modelo_reg_multi2 <- lm(y~x1+x2+x3+x4+x5+x6+x10+x8+x9, data=dados_qualidade_vinho)
summary(modelo_reg_multi2)
# modelo ajustado sem x7 e x10
modelo_reg_multi2 <- lm(y~x1+x2+x3+x4+x5+x6+x8+x9, data=dados_qualidade_vinho)
summary(modelo_reg_multi2)
vif(modelo_reg_multi2) # Multicolinearidade se VIF > 10 (severa) e > 5 (moderada)
library(MASS)
summary(modelo_reg_multi2)
vif(modelo_reg_multi2) # Multicolinearidade se VIF > 10 (severa) e > 5 (moderada)
library(car)
# modelo ajustado sem x7 e x10
modelo_reg_multi2 <- lm(y~x1+x2+x3+x4+x5+x6+x8+x9, data=dados_qualidade_vinho)
summary(modelo_reg_multi2)
vif(modelo_reg_multi2) # Multicolinearidade se VIF > 10 (severa) e > 5 (moderada)
modelo_stepwise <- step(modelo_reg_multi3, direction = "both")
summary(modelo_stepwise)
modelo_backward <- stepAIC(modelo_reg_multi2, direction = "backward")
modelo_stepwise <- step(modelo_reg_multi2, direction = "both")
summary(modelo_stepwise)
modelo_stepwise <- step(modelo_reg_multi2, direction = "both")
summary(modelo_stepwise)
vif(modelo_stepwise) #não há mais multicolinearidade
# modelo ajustado sem x7 e x10
modelo_reg_multi2 <- lm(y~x1+x2+x3+x4+x6+x8+x9, data=dados_qualidade_vinho)
summary(modelo_reg_multi2)
vif(modelo_reg_multi2) # Multicolinearidade se VIF > 10 (severa) e > 5 (moderada)
modelo_stepwise <- step(modelo_reg_multi2, direction = "both")
summary(modelo_stepwise)
vif(modelo_stepwise) #não há mais multicolinearidade
modelo_final <- lm(y~ x2 + x5 + x8, data=dados_qualidade_vinho)
summary(modelo_final) #apenas a variável x5 é significante
summary(modelo_stepwise)
#modelo ajustado sem as outras variáveis que estão apontando multicolinearidade
modelo_reg_multi3 <- lm(y~x1+x2+x3+x5+x8, data=dados_qualidade_vinho)
summary(modelo_reg_multi3)
vif(modelo_reg_multi3) #não há mais multicolinearidade
fit_depressao_intera %>%
summary()
if(!("pacman" %in% installed.packages())){install.packages("pacman")}
pacman::p_load(tidyverse, tidymodels, kableExtra, corrplot, plotrix, lmtest, psych, car, phia, cowplot)
# kpss.test(E) %>%
#   tidy()%>%
#   select(method, statistic, `p.value`) %>%
#   knitr::kable(
#     format = "latex",
#     align = c("lccc"),
#     booktabs = TRUE,
#     longtable = TRUE,
#     linesep = "",
#     escape = FALSE,
#     digits = 2,
#     col.names = c("", "Estatística", "p-valor")
#     ) %>%
#   kableExtra::kable_styling(
#       position = "center",
#       latex_options = c("striped", "repeat_header"),
#       stripe_color = "gray!15")
dados <- read.table("dados lista 2/Q02_data.txt", header=T)
head(dados)%>%
knitr::kable(
format = "latex",
align = c("c"),
booktabs = TRUE,
longtable = TRUE,
linesep = "",
escape = FALSE,
digits = 2
) %>%
kableExtra::kable_styling(
position = "center",
latex_options = c("striped", "repeat_header"),
stripe_color = "gray!15")
geral <- ggplot(dados, aes(x = idade, y = eficacia))+
geom_point(shape = 15, size = 2, alpha = .75)+
geom_smooth(method = "lm", se = FALSE)+
labs(y = "Eficácia", x = "Idade")+
theme_bw()+
theme(axis.ticks = element_blank())
trat <- ggplot(dados, aes(x = idade, y = eficacia, color = tratamento))+
geom_point(shape = 15, size = 2, alpha = .75)+
labs(y = "Eficácia", x = "Idade")+
theme_bw()+
theme(axis.ticks = element_blank(),
legend.position = "none")
plot_grid(geral, trat)
#da encoding à variavel tratamento
dados_dummy <- dados %>%
mutate(A = if_else(tratamento == "A", 1, 0),
B = if_else(tratamento == "B", 1, 0)) %>%
select(-tratamento)
#monta fit aditivo do modelo
fit_depressao <- lm(eficacia ~ (.), data = dados_dummy)
#tabela do modelo
fit_depressao %>%
summary() %>%
tidy() %>%
knitr::kable(
format = "latex",
align = c("lcccc"),
booktabs = TRUE,
longtable = TRUE,
linesep = "",
escape = FALSE,
digits = 3,
col.names = c("Coeficiente","Estimativa", "EP" , "Estatística t", "p-valor"),
caption = "Modelo de regressão linear para tratamentos sem interação com idade sobre eficácia"
) %>%
kableExtra::kable_styling(
position = "center",
latex_options = c("striped", "repeat_header"),
stripe_color = "gray!15")
anova(fit_depressao) %>%
tidy() %>%
knitr::kable(
format = "latex",
align = c("lcccc"),
booktabs = TRUE,
longtable = TRUE,
linesep = "",
escape = FALSE,
digits = 3,
col.names = c("Fonte de Var.","g.l.", "SQ" , "QM", "F", "p-valor"),
caption = "Tabela ANOVA para o modelo linear sem interações"
) %>%
kableExtra::kable_styling(
position = "center",
latex_options = c("striped", "repeat_header"),
stripe_color = "gray!15")
#modelo aditivo (.) + interações específicas'
fit_depressao_intera <- lm(eficacia ~ (.) + idade*A + idade*B, data = dados_dummy)
fit_depressao_intera %>%
summary()
fit_depressao %>%
summary()
fit_depressao_intera %>%
+     summary()
fit_depressao_intera %>%
summary()
6.21+41.3
1.03-.7
6.21+22.7
1.03-.5
hit(dados$eficacia)
hist(dados$eficacia)
dados %>%
ggplot(aes(eficacia))+
theme_bw()
dados %>%
ggplot(aes(eficacia))+
theme_bw()
dados %>%
ggplot(aes(eficacia))+
geom_histogram()+
theme_bw()
dados %>%
ggplot(aes(eficacia))+
geom_histogram()+
theme_bw()
dados %>%
ggplot(aes(eficacia))+
geom_histogram(color = "black", fill = "white")+
theme_bw()
dados %>%
ggplot(aes(eficacia))+
geom_histogram(color = "black", fill = "white", bins = 10)+
theme_bw()
dados %>%
ggplot(aes(eficacia))+
geom_histogram(color = "black", fill = "white", bins = 10)+
expand(ylim = c(0,0))+
theme_bw()+
theme()
dados %>%
ggplot(aes(eficacia))+
geom_histogram(color = "black", fill = "white", bins = 10)+
expand(ylim = c(0,0))+
theme_bw()
dados %>%
ggplot(aes(eficacia))+
geom_histogram(color = "black", fill = "white", bins = 10)
dados %>%
ggplot(aes(eficacia))+
geom_histogram(color = "black", fill = "white", bins = 10)+
scale_y_continuous(limits = c(0, 9))+
theme_bw()+
theme(axis.line = element_blank())
dados %>%
ggplot(aes(eficacia))+
geom_histogram(color = "black", fill = "white", bins = 10)+
scale_y_continuous(limits = c(0, 9),
expand = ylim(0, 9))+
theme_bw()+
theme(axis.line = element_blank())
dados %>%
ggplot(aes(eficacia))+
geom_histogram(color = "black", fill = "white", bins = 10)+
scale_y_continuous(limits = c(0, 9),
expand = expansion(multo = 0, add = 0))+
theme_bw()+
theme(axis.line = element_blank())
dados %>%
ggplot(aes(eficacia))+
geom_histogram(color = "black", fill = "white", bins = 10)+
scale_y_continuous(limits = c(0, 9),
expand = expansion(mult = 0, add = 0))+
theme_bw()+
theme(axis.line = element_blank())
dados %>%
ggplot(aes(eficacia))+
geom_histogram(color = "black", fill = "gray", bins = 10)+
scale_y_continuous(limits = c(0, 9),
expand = expansion(mult = 0, add = 0))+
theme_bw()+
theme(pane.grid = element_blank())
dados %>%
ggplot(aes(eficacia))+
geom_histogram(color = "black", fill = "gray", bins = 10)+
scale_y_continuous(limits = c(0, 9),
expand = expansion(mult = 0, add = 0))+
theme_bw()+
theme(panel.grid = element_blank())
dados %>%
ggplot(aes(eficacia))+
geom_histogram(color = "black", fill = "gray", bins = 10)+
scale_y_continuous(limits = c(0, 9),
expand = expansion(mult = 0, add = 0))+
theme_minimal()
()
dados %>%
ggplot(aes(eficacia))+
geom_histogram(color = "black", fill = "gray", bins = 10)+
scale_y_continuous(limits = c(0, 9),
expand = expansion(mult = 0, add = 0))+
theme_bw()+
theme(panel.grid = element_blank())
dados %>%
ggplot(aes(eficacia))+
geom_histogram(color = "black", fill = "gray", bins = 10)+
scale_y_continuous(limits = c(0, 9),
expand = expansion(mult = 0, add = 0))+
theme_bw()+
theme(axis.ticks = element_blank())
dados %>%
ggplot(aes(eficacia))+
geom_histogram(color = "black", fill = "gray", bins = 10)+
scale_y_continuous(limits = c(0, 9),
expand = expansion(mult = 0, add = 0))+
labs(x = "Eficácia", y = "")+
theme_bw()+
theme(axis.ticks = element_blank())
dados %>%
ggplot(aes(eficacia))+
geom_histogram(bins = 10)+
scale_y_continuous(limits = c(0, 9),
expand = expansion(mult = 0, add = 0))+
labs(x = "Eficácia", y = "")+
theme_bw()+
theme(axis.ticks = element_blank())+
facet_wrap(~tratamento)
dados %>%
ggplot(aes(eficacia, fill = tratamento))+
geom_histogram(bins = 10)+
scale_y_continuous(limits = c(0, 9),
expand = expansion(mult = 0, add = 0))+
labs(x = "Eficácia", y = "")+
theme_bw()+
theme(axis.ticks = element_blank())+
facet_wrap(~tratamento)
dados %>%
ggplot(aes(eficacia, fill = tratamento))+
geom_histogram(bins = 10)+
scale_y_continuous(limits = c(0, 9),
expand = expansion(mult = 0, add = 0))+
labs(x = "Eficácia", y = "", legend = "Tratamento")+
theme_bw()+
theme(axis.ticks = element_blank())+
facet_wrap(~tratamento)
dados %>%
ggplot(aes(eficacia, fill = tratamento))+
geom_histogram(bins = 10)+
scale_y_continuous(limits = c(0, 9),
expand = expansion(mult = 0, add = 0))+
labs(x = "Eficácia", y = "", label = "Tratamento")+
theme_bw()+
theme(axis.ticks = element_blank())+
facet_wrap(~tratamento)
dados %>%
ggplot(aes(eficacia, fill = tratamento))+
geom_histogram(bins = 10)+
scale_y_continuous(limits = c(0, 9),
expand = expansion(mult = 0, add = 0))+
labs(x = "Eficácia", y = "", fill = "Tratamento")+
theme_bw()+
theme(axis.ticks = element_blank())+
facet_wrap(~tratamento)
dados %>%
ggplot(aes(eficacia, fill = tratamento))+
geom_histogram(bins = 10)+
scale_y_continuous(limits = c(0, 5),
expand = expansion(mult = 0, add = 0))+
labs(x = "Eficácia", y = "", fill = "Tratamento")+
theme_bw()+
theme(axis.ticks = element_blank())+
facet_wrap(~tratamento)
hist(dados$idade)
dados %>%
ggplot(aes(eficacia, fill = tratamento))+
geom_histogram(bins = 10, color = "black")+
scale_y_continuous(limits = c(0, 5),
expand = expansion(mult = 0, add = 0))+
labs(x = "Eficácia", y = "", fill = "Tratamento")+
theme_bw()+
theme(axis.ticks = element_blank())+
facet_wrap(~tratamento)
dados %>%
ggplot(aes(eficacia, fill = tratamento))+
geom_histogram(bins = 10, color = "black")+
scale_y_continuous(limits = c(0, 5),
expand = expansion(mult = 0, add = 0))+
labs(x = "Eficácia", y = "", fill = "Tratamento")+
theme_bw()+
theme(axis.ticks = element_blank())+
facet_wrap(~tratamento)
rstandard(fit_depressao_intera)
rstudent(fit_depressao_intera)
rstandard(fit_depressao_intera) %>% plot()
rstudent(fit_depressao_intera) %>% plot()
autoplot(fit_depressao_intera)
confint(fit_depressao_intera, level=0.95)
confint(fit_depressao_intera, level=0.95) %>% tidy()
confint(fit_depressao_intera, level=0.95) %>% class()
confint(fit_depressao_intera, level=0.95) %>%
as_tibble()
row.names(confint(fit_depressao_intera, level=0.95))
confint(fit_depressao_intera, level=0.95) %>%
as_tibble() %>% names()
mutate(Estimador = row.names(confint(fit_depressao_intera, level=0.95)))
confint(fit_depressao_intera, level=0.95) %>%
as_tibble() %>%
mutate(Estimador = row.names(confint(fit_depressao_intera, level=0.95)))
confint(fit_depressao_intera, level=0.95) %>%
as_tibble() %>%
mutate(Estimador = row.names(confint(fit_depressao_intera, level=0.95))) %>%
select(Estimador, everything())
fit_depressao_intera %>%
summary()
confint(fit_depressao_intera, level=0.95) %>%
as_tibble() %>%
mutate(Estimador = row.names(confint(fit_depressao_intera, level=0.95))) %>%
select(Estimador, everything())
confint(fit_depressao_intera, level=0.95) %>%
as_tibble() %>%
mutate(Estimador = row.names(confint(fit_depressao_intera, level=0.95))) %>%
select(Estimador, everything())
confint(fit_depressao_intera, level=0.95) %>%
as_tibble() %>%
mutate(Estimador = row.names(confint(fit_depressao_intera, level=0.95))) %>%
select(Estimador, everything()) %>%
knitr::kable(
format = "latex",
align = c("lcc"),
booktabs = TRUE,
longtable = TRUE,
linesep = "",
escape = FALSE,
digits = 3,
col.names = c("Estimador","LI (2.5%)", "LS (97.5%)"),
caption = "Intervalos de confiança para estimadores dos coeficientes de regressão") %>%
kableExtra::kable_styling(
position = "center",
latex_options = c("striped", "repeat_header"),
stripe_color = "gray!15")
row.names(confint(fit_depressao_intera, level=0.95))
tabela <- confint(fit_depressao_intera, level=0.95) %>%
as_tibble() %>%
mutate(Estimador = nomes) %>%
select(Estimador, everything())
tabela
tabela <- confint(fit_depressao_intera, level=0.95) %>%
as_tibble() %>%
mutate(Estimador = nomes) %>%
select(Estimador, everything())
nomes <- row.names(confint(fit_depressao_intera, level=0.95))
tabela <- confint(fit_depressao_intera, level=0.95) %>%
as_tibble() %>%
mutate(Estimador = nomes) %>%
select(Estimador, everything())
tabela
influence.measures(fit_depressao_intera)
influence.measures(fit_depressao_intera)
plot(dados$idade, dados$eficacia)
## Perform the normal Shapiro-Wilk test for the residuals
shapiro.test(residuals(fit_depressao_intera))
## Perform breush-pagan test for hetereocedascity
bptest(fit_depressao_intera)
## Perform Durbin-Watson test for Independence
durbinWatsonTest(fit_depressao_intera)
## Perform the normal Shapiro-Wilk test for the residuals
shapiro.test(residuals(fit_depressao_intera)) %>% tidy()
## Perform breush-pagan test for hetereocedascity
bptest(fit_depressao_intera) %>% tidy()
## Perform Durbin-Watson test for Independence
durbinWatsonTest(fit_depressao_intera) %>% tidy()
shapiro.test(residuals(fit_depressao_intera)) %>% tidy()
bptest(fit_depressao_intera) %>% tidy()
durbinWatsonTest(fit_depressao_intera) %>% tidy()
durbinWatsonTest(fit_depressao_intera)
## Perform the normal Shapiro-Wilk test for the residuals
shapiro.test(residuals(fit_depressao_intera)) %>% tidy()
## Perform breush-pagan test for hetereocedascity
bptest(fit_depressao_intera) %>% tidy()
## Perform Durbin-Watson test for Independence
durbinWatsonTest(fit_depressao_intera) %>% tidy()
## Perform breush-pagan test for hetereocedascity
(bptest(fit_depressao_intera) %>% tidy())[, c(1, 2, 4)]
## Perform Durbin-Watson test for Independence
(durbinWatsonTest(fit_depressao_intera) %>% tidy())[,c(1, 2, 4)]
## Perform the normal Shapiro-Wilk test for the residuals
shapiro.test(residuals(fit_depressao_intera)) %>% tidy()
## Perform breush-pagan test for hetereocedascity
(bptest(fit_depressao_intera) %>% tidy())[, c(1, 2, 4)]
## Perform Durbin-Watson test for Independence
(durbinWatsonTest(fit_depressao_intera) %>% tidy())[,c(1, 2, 4)]
## Perform breush-pagan test for hetereocedascity
(bptest(fit_depressao_intera) %>% tidy())[, c(1, 2, 4)]
## Perform the normal Shapiro-Wilk test for the residuals
shapiro.test(residuals(fit_depressao_intera)) %>% tidy()
?shapiro.test
tibble(
## Perform the normal Shapiro-Wilk test for the residuals
shapiro.test(residuals(fit_depressao_intera)) %>% tidy(),
## Perform breush-pagan test for hetereocedascity
(bptest(fit_depressao_intera) %>% tidy())[, c(1, 2, 4)],
## Perform Durbin-Watson test for Independence
(durbinWatsonTest(fit_depressao_intera) %>% tidy())[,c(1, 2, 4)]
)
bind_rows(
## Perform the normal Shapiro-Wilk test for the residuals
shapiro.test(residuals(fit_depressao_intera)) %>% tidy(),
## Perform breush-pagan test for hetereocedascity
(bptest(fit_depressao_intera) %>% tidy())[, c(1, 2, 4)],
## Perform Durbin-Watson test for Independence
(durbinWatsonTest(fit_depressao_intera) %>% tidy())[,c(1, 2, 4)]
)
influence.measures(MultipleReg2) %>% class()
influence.measures(fit_depressao_intera) %>% class()
influence.measures(fit_depressao_intera) %>% as.data.frame()
influence.measures(fit_depressao_intera) %>% tidy()
rstudent(MultipleReg2)
rstandard(fit_depressao_intera) %>% plot()
rstandard(fit_depressao_intera)
rstudent(fit_depressao_intera) %>% plot()
rstudent(fit_depressao_intera)
influence.measures(fit_depressao_intera)
influence.measures(fit_depressao_intera)
plot(fit_depressao_intera)
plot(fit_depressao_intera)
rstudent(fit_depressao_intera) %>% plot()
rstudent(fit_depressao_intera) %>% plot()
dados
plot(1:36, dados$eficacia)
plot(1:36, rstudent(fit_depressao_intera))
plot(dados$eficacia, rstudent(fit_depressao_intera))
rstudent(fit_depressao_intera) %>% plot()
rstudent(fit_depressao_intera) %>% plot()
rstudent(fit_depressao_intera) %>% plot()
