library(olsrr)   
library(ggplot2)
#library(bstats)
library(lmtest)
library(car)


##-------------------------------------------------------##
##      Simple Linear Regression Model (Example 1:       ##
##          Dados do propelente de foguete)              ##
##-------------------------------------------------------##
## y: Força de cisalhamento (em psi)
## x: Idade dos propalelentes (semanas)

setwd("~/UnB/9 semestre/MLG")

example1_SLRM<-read.table("SimpleLM_ex1.txt",header=T)
example1_SLRM

## Scatterplot Graph
plot(example1_SLRM[,"x"],example1_SLRM[,"y"], xlab = "Idade (em semanas)", ylab = "Força (em psi)")

## Adjusted Model
fit.ex1<- lm(example1_SLRM[,"y"]~example1_SLRM[,"x"], data=example1_SLRM)
summary(fit.ex1)

## Regression line
plot(example1_SLRM[,"x"],example1_SLRM[,"y"], xlab = "Age (in Weeks)", ylab = "Força (em psi)")
abline(fit.ex1,col="red") # linha com o modelo de regressao linear simples



##
##
##------------------##
## Model Diagnostic ##
##------------------##
#x11()
par(mfrow=c(2,2))
plot(example1_SLRM[,"x"], resid(fit.ex1), ylab = "Ordinary Residuals", xlab = "x")
abline(h=0, col="red")
plot(example1_SLRM[,"y"], resid(fit.ex1), ylab = "Ordinary Residuals", xlab = "y")
abline(h=0, col="red")

##---------------------------------##
## Plot for residuals independence ##
##---------------------------------##

par(mfrow=c(2,2))
plot(resid(fit.ex1), ylab = "Ordinary Residuals", pch=1) 
##
hist(resid(fit.ex1), xlab = "Ordinary Residuals", main="")
boxplot(resid(fit.ex1))

##---------------##
## Envelope Plot ##
##---------------##
qqPlot(resid(fit.ex1))
##
##


par(mfrow=c(2,2))
plot(fit.ex1)




##-------------------------------##
## Perform the Shapiro-Wilk test ##
##-------------------------------##
shapiro.test(resid(fit.ex1))

##-------------------------------##
## Perform breush-pagan test for ##
## heterocedascity               ##
##-------------------------------##
bptest(fit.ex1)

##-------------------------------##
## Perform the independence test ##
##-------------------------------##
dwtest(fit.ex1)
##
##
##
##
##
##
##
##
##-------------------------------------------------------##
##           Description of the olsrr package            ##
##-------------------------------------------------------##
## olsrr offers the following tools                      ##
## to detect influential observations:                   ##
##-------------------------------------------------------##
## - Cook’s D Bar Plot                                   ##
## - Cook’s D Chart                                      ##
## - DFBETAs Panel                                       ##
## - DFFITs Plot                                         ##
## - Studentized Residual Plot                           ##
## - Standardized Residual Chart                         ##
## - Studentized Residuals vs Leverage Plot              ##
## - Deleted Studentized Residual vs Fitted Values Plot  ##
## - Potential Residual Plot                             ##
##-------------------------------------------------------##
##
##-----------##
## EXAMPLE 2 ##
##-----------##
set.seed(2023)
data<- data.frame(rnorm(100,2,4),runif(100))
colnames(data)<-c("y","x")

##
fit<-lm(y~x,data)
##
summary(fit)


par(mfrow=c(2,2))
plot(fit)

# plot de residuos padronizados indica pontos de alavancagem.
# se |ri| > 2, não é um bom ponto de alavancagem
par(mfrow=c(1,2))
plot(data[,"x"], rstandard(fit), ylab = "Standarized Residuals", xlab="X", las=1, pch=19)
abline(h=c(-2,2), col="red", lwd=2)
##
hist(resid(fit), main="Residual Histogram", xlab = "Ordinary Residuals")

##--------------------##
## Influence measures ##
##--------------------##

#It’s the change in a regression coefficient when the ith observation is removed
dfbetas(fit) #threshold at +-(2/sqrt(n)) for small n and 0.05 at big n
ols_plot_dfbetas(fit)

#influential data points
# influential if |dffits| > 2(sqrt(p+1)/(n-p-1))
dffits(fit)

#measures the change in the determinant of the covariance matrix
#of the estimates by deleting the ith observation
covratio(fit) #investigate iv |covratio-1| >= 3p/n


#### Studentized residuals
x11()
ols_plot_resid_stud(fit) 

## Plots
plot(cooks.distance(fit), type="h", main="Cook's distance",
      ylab="D", xlab="Observation number", las=1 )


plot(dffits(fit), type="h", main="DFFITS",
      ylab="DFFITS", xlab="Observation number", las=1 )

dfbi <- 1
plot(dfbetas(fit)[, dfbi + 1], type="h", main="DFBETAS for 
      beta2", ylab="DFBETAS", xlab="Observation number", las=1 )
##
influence.measures(fit)

##----------------------------------------##
## Cook Distance bars (Threshold=4/(n-2)) ##
##----------------------------------------##

x11()
ols_plot_cooksd_bar(fit)

##------------##
## DFBetaS(i) ##
##------------##
ols_plot_dfbetas(fit)

##-----------##
## DFFitS(i) ##
##-----------##
x11()
ols_plot_dffits(fit)

##---------------------------------##
## Plot for residuals independence ##
##---------------------------------##
x11()
par(mfrow=c(2,2))
plot(resid(fit), ylab = "Ordinary Residuals", pch=1) 
##
hist(resid(fit), xlab = "Ordinary Residuals", main="")
boxplot(resid(fit))

##---------------##
## Envelope Plot ##
##---------------##
qqPlot(resid(fit), ylab="Ordinary Residuals", xlab = "Normal Quantiles")

##-------------------------------------##
## Darbin-Watson Test for independence ##
##-------------------------------------##
dwtest(fit) 


##--------------------------------------##
## Perform the normal Shapiro-Wilk test ##
## for the residuals                    ##
##--------------------------------------##
shapiro.test(residuals(fit))
